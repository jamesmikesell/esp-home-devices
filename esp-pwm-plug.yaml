esphome:
  name: "esp-pwm-plug"
  friendly_name: "esp-pwm-plug"
  # on_boot:
  #   priority: -5000
  #   then:
  #     - lambda: !lambda |-
  #         id(pwm_output).set_level(id(pwm_power).state / 100.0);
  #         id(pwm_output).set_frequency(id(pwm_frequency).state);


esp8266:
  board: nodemcuv2
  restore_from_flash: true

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  - platform: esphome
    password: ""

wifi:
  # use_address: esp-temp.local
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESP PWM Plug"
    password: !secret wifi_password

captive_portal:

web_server:
  port: 80





output:
  - platform: esp8266_pwm
    pin: D0
    frequency: 61
    id: pwm_output

number:
  - platform: template
    name: "PWM Power Percent"
    id: pwm_power
    min_value: 0
    max_value: 100
    step: 1
    restore_value: true
    optimistic: true
    on_value:
      then:
        - lambda: |-
            id(pwm_output).set_level(x / 100.0);

  - platform: template
    name: "PWM Frequency"
    id: pwm_frequency
    min_value: 0.1
    max_value: 20000
    step: 1
    restore_value: true
    optimistic: true
    on_value:
      then:
        - lambda: |-
            id(pwm_output).set_frequency(x);
            id(pwm_output).set_level(id(pwm_power).state / 100.0);

